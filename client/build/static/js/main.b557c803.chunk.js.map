{"version":3,"sources":["pages/LandingPage.js","assets/images/plantrlogo.svg","assets/images/navpattern.svg","components/NavBar.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","components/HeroText.js","utils/queries.js","utils/mutations.js","utils/auth.js","pages/Signup.js","components/ProductColumn.js","pages/Productivity.js","components/Footer.js","App.js","index.js"],"names":["Productivity","className","Navbar","fixed","React","useState","navbarOpen","setNavbarOpen","style","backgroundImage","mySvg","href","src","plantrlogo","alt","type","onClick","id","ToDoForm","props","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","onSubmit","preventDefault","Math","floor","random","text","placeholder","name","onChange","ref","ToDo","todos","completeTodo","removeTodo","updateTodo","setEdit","TodoForm","map","todo","index","isComplete","classname","TodoList","setTodos","test","newTodos","Todo","updatedTodos","removeArr","filter","todoId","newValue","prev","item","HeroText","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","username","email","password","formState","setFormState","useMutation","addUser","error","data","event","handleFormSubmit","a","console","log","variables","Auth","login","to","cursor","message","ProductColumn","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","LandingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b557c803.chunk.js","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n\nconst Productivity= () => {\n    \n    return (\n      <main>\n        <div className=\"flex-row justify-center\">\n         landing page\n         \n        </div>\n      </main>\n    );\n  };\n\n  export default Productivity;","export default __webpack_public_path__ + \"static/media/plantrlogo.b408a565.svg\";","export default __webpack_public_path__ + \"static/media/navpattern.f0c799c9.svg\";","import React from \"react\";\nimport plantrlogo from '../assets/images/plantrlogo.svg';\nimport mySvg from '../assets/images/navpattern.svg';\n\n\nexport default function Navbar({ fixed }) {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-nvbg shadow-lg mb-3\" style={{ backgroundImage: `url(${mySvg})` }} >\n       <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <a\n              className=\"text-2xl font-bold leading-relaxed inline-block ml-0 mr-4 py-2 whitespace-nowrap uppercase text-secondary\"\n              href=\"#pablo\"\n            >\n            <img className=\"img-responsive w-60  mt-2\" src={plantrlogo} alt=\"logo\"/>\n            </a>\n            <button\n              className=\"fa-f text-black cursor-pointer mt-2 shadow-md text-xl leading-none px-4 w-10 h-10 py-1  bg-white border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <i className=\"fas fa-bars\"></i>\n            </button>\n          </div>\n          <div\n            className={\n              \"lg:flex flex-grow items-center\" +\n              (navbarOpen ? \" flex\" : \" hidden\")\n            }\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 mt-2 py-2 flex items-center text-s  font-bold  font-poppins leading-snug text-black hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\" text-lg leading-lg text-dark opacity-75\"></i><span className=\"ml-2\">Home</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 mt-2 flex items-center text-s  font-bold  font-poppins leading-snug text-black hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-twitter text-lg leading-lg text-dark opacity-75\"></i><span className=\"ml-2\">Learn More</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 mt-2 flex items-center text-s  font-bold  font-poppins leading-snug text-black hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-pinterest text-lg leading-lg text-dark opacity-75\"></i><span className=\"ml-2\">Profile</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}","import React, {useState, useEffect, useRef } from 'react'\n\n\nfunction ToDoForm(props) {\nconst [input, setInput] = useState(props.edit ? props.edit.value : '');\n\nconst inputRef = useRef(null, props);\n\nuseEffect(() => {\n    inputRef.current.focus()\n})\n\nconst handleChange = e => {\n    setInput(e.target.value);\n}\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input\n    })\n\n    setInput('');\n}\n    return (\n       <form className=\"todo-form\" onSubmit={handleSubmit}>\n           {props.edit ? ( \n           <>\n           <input \n           type=\"text\" \n           placeholder=\"Update your task\" \n           value={input} \n           name=\"text\" \n           className=\"todo-input edit\"\n           onChange={handleChange}\n           ref={inputRef}\n           />\n           <button className=\"todo-button edit\">Update</button>\n           </>\n           ) : ( \n           <>\n           <input \n            type=\"text\" \n            placeholder=\"Add a todo\" \n            value={input} \n            name=\"text\" \n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n            />\n            <button className=\"todo-button\">Add todo</button>\n            </>\n            )\n        }\n       </form>\n    )\n}\n\nexport default ToDoForm\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\nfunction ToDo({ todos, completeTodo, removeTodo, updateTodo }) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({ \n            id: null,\n            value: ''\n        })\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div classname='icons'>\n                <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className='delete-icon'\n                />\n                <TiEdit \n                onClick={() => setEdit({ id:todo.id, value: todo.text })}\n                className='edit-icon'\n                />\n            </div>\n        </div>\n    ))\n}\n\nexport default ToDo\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([])\n\n    const addTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n       \n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n        )\n    }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removeArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    }\n\n    return (\n        <div>\n            <TodoForm onSubmit={addTodo} />\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n        </div>\n    )\n}\n\nexport default TodoList\n","import React from \"react\";\n\n\nexport default function HeroText() {\n  return (\n    <div className=\"relative... p-6 h-60 max-w-sm mx-auto bg-nvbg rounded-xl  flex items-center space-x-4\">\n   \n    <div>\n     <p className=\"w-1/3 px-8 w-1 absolute leading-relaxed animate-fade-in-up tracking-widest left-20 \n     text-dark  text-5xl font-bold font-poppins\">Every good habit begins with a seed of effort.</p>\n    </div>\n  </div>\n   \n  );\n}\n\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USERS = gql`\n  query getUsers {\n    users {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_TASK = gql`\n    mutation addTask($taskName: String!, $taskPoint: Number!,\n    $taskDescription: String!, $taskDate: Date!){\n        addTask(taskName: $taskName, taskPoint: $taskPoint, taskDescription: $taskDescription, taskDate: $taskDate){\n            _id\n            taskName\n            taskPoint\n            taskDescription\n            taskDate\n        }\n    }`\n    \n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport ToDoList from \"./TodoList\"\n\nexport default function ProductColumn() {\n  return (\n    <div className=\"m-8 min-h-500 bg-primary\" >\n   \n    <div>\n      \n     <ToDoList />\n    </div>\n  </div>\n  \n  \n   \n  );\n}\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ProductColumn from '../components/ProductColumn'\n\nconst Productivity= () => {\n    \n    return (\n      <main>\n        <div className=\"grid grid-cols-4\">\n          \n          <ProductColumn />\n         \n          <ProductColumn />\n          \n          <ProductColumn />\n        </div>\n      </main>\n    );\n  };\n\n  export default Productivity;\n","import React from \"react\";\n\n\nexport default function HeroText() {\n    return (\n      <div className=\"flex justify-center border-t-2 fixed bottom-0 w-full\">\n     \n      <div>\n      This is a footer\n      </div>\n    </div>\n     \n    );\n  }","import React from 'react';\nimport './App.css'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage'\nimport NavBar from './components/NavBar';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport HeroText from './components/HeroText'\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Productivity from './pages/Productivity';\nimport Footer from './components/Footer';\nimport Graphs from './components/Graphs';\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      \n    <Router>\n    <div className=\"App\">\n      <Route exact path=\"/\">\n        <NavBar />\n        <LandingPage />\n        {/* <TodoForm /> */}\n        \n        <HeroText />\n        {/* <Graphs /> */}\n        {/* <Home /> */}\n      </Route>\n      <Route exact path=\"/signup\">\n      <NavBar />\n        <Signup />\n      </Route>\n      <Route exact path=\"/productivity\">\n      <NavBar />\n        <Productivity />\n        {/* <TodoList /> */}\n        <Footer />\n      </Route>\n      \n    </div>\n   \n    </Router>\n   \n    </ApolloProvider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}